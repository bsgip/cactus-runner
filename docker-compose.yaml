# This docker compose file is based off:
# https://github.com/bsgip/envoy/blob/main/demo/docker-compose.yaml
#
# The following modifications have been made:
#   (i) The TLS service has been removed (along with the certificates docker volume).
#  (ii) The envoy-db_init service is replaced with the simpler envoy-init service which runs `alembic upgrade head` and then terminates.
# (iii) The postgresql database is not persisted in a docker volume.
#  (iv) TODO The envoy service does not publish it's port (to the host). All communciation to the envoy server should be directed to the `harness-runner` service.
#   (v) TODO The harness runner service was added and publishes itself on port 8000.
#
x-envoy-common:
  environment: &common-env
    DATABASE_URL: "postgresql+asyncpg://test_user:test_pwd@envoy-db/test_db"
    CERT_HEADER: x-forwarded-client-cert
    ENABLE_NOTIFICATIONS: "True"
    RABBIT_MQ_BROKER_URL: "amqp://guest:guest@rabbit-mq:5672"
    ALLOW_DEVICE_REGISTRATION: "True"

services:
  rabbit-mq:
    image: rabbitmq:3-management
    ports:
      - 127.0.0.1:5672:5672
      - 127.0.0.1:15672:15672
    hostname: rabbit-mq
    restart: unless-stopped
    networks:
      - envoy-net
    healthcheck:
      test: rabbitmq-diagnostics -q check_running && rabbitmq-diagnostics -q check_local_alarms
      interval: 30s
      timeout: 30s
      retries: 5
      start_period: 20s

  taskiq-worker:
    image: envoy:latest
    environment:
      <<: *common-env
    command: taskiq worker envoy.notification.main:broker envoy.notification.task
    restart: unless-stopped
    networks:
      - envoy-net
    depends_on:
      rabbit-mq:
        condition: service_healthy

  envoy:
    image: envoy:latest
    ports:
      - 127.0.0.1:8000:8000
    restart: unless-stopped
    networks:
      - envoy-net
    environment:
      <<: *common-env
      PORT: 8000
      APP_MODULE: envoy.server.main:app
    depends_on:
      envoy-db:
        condition: service_started
      rabbit-mq:
        condition: service_healthy
      envoy-init:
        condition: service_completed_successfully

  envoy-admin:
    image: envoy:latest
    ports:
      - 127.0.0.1:8001:8001
    restart: unless-stopped
    networks:
      - envoy-net
    environment:
      <<: *common-env
      ADMIN_USERNAME: admin
      ADMIN_PASSWORD: password
      PORT: 8001
      APP_MODULE: envoy.admin.main:app
    depends_on:
      envoy-db:
        condition: service_started
      rabbit-mq:
        condition: service_healthy
      envoy-init:
        condition: service_completed_successfully

  # The db data is *not* persisted via a docker volume
  envoy-db:
    image: timescale/timescaledb:latest-pg10
    ports:
      - 127.0.0.1:8003:5432
    networks:
      - envoy-net
    environment:
      - POSTGRES_USER=test_user
      - POSTGRES_PASSWORD=test_pwd
      - POSTGRES_DB=test_db
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "test_user", "-d", "test_db" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s

  envoy-init:
    image: envoy:latest
    environment:
      <<: *common-env
    working_dir: /app/src/envoy/server/
    entrypoint: alembic
    command: upgrade head
    networks:
      - envoy-net
    depends_on:
      envoy-db:
        condition: service_healthy


networks:
  envoy-net:
